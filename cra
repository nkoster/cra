#!/usr/bin/env bash

set -e

if [ "$#" -ne 1 ]; then
  echo "Specify a React project directory."
  exit 1 
fi

mkdir $1

cd $1

npm init -y
git init

cat > .gitignore << CRA
node_modules
build
CRA

npm i react react-dom

cat > .babelrc << CRA
{
    "presets": [
        "@babel/preset-env",
        "@babel/preset-react"
    ]
}
CRA

cat > webpack.config.js << CRA
const path = require('path')
const HtmlWebPackPlugin = require('html-webpack-plugin')
const CopyWebPackPlugin = require('copy-webpack-plugin')

module.exports = {
  devServer: {
    port: 3000
  },
  output: {
    path: path.resolve(__dirname, 'build'),
    filename: 'bundle.js',
  },
  resolve: {
    modules: [path.join(__dirname, 'src'), 'node_modules'],
    alias: {
      react: path.join(__dirname, 'node_modules', 'react'),
    },
  },
  module: {
    rules: [
      {
        test: /\.(js|jsx)$/,
        exclude: /node_modules/,
        use: {
          loader: 'babel-loader',
        },
      },
      {
        test: /\.css$/,
        use: [
          {
            loader: 'style-loader',
          },
          {
            loader: 'css-loader',
          },
        ],
      },
    ],
  },
  plugins: [
    new HtmlWebPackPlugin({
      template: './src/index.html',
    }),
    new CopyWebPackPlugin({
      patterns: [
        { from: 'assets', to: 'assets' }
      ]
    })
  ],
}
CRA

mkdir src

cat > src/index.html << CRA
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>React Boilerplate</title>
</head>
<body>
  <div id="root"></div>
</body>
</html>
CRA

cat > "src/App.js" << CRA
import React from 'react'
import './App.css'

const App = () => {
  return (
    <div className='App'>
      <h3>App</h3>
      <img src='../assets/blacksquare.svg' />
    </div>
  )
}

export default App
CRA

cat > src/index.js << CRA
import React from 'react'
import { render } from 'react-dom'
import './index.css'

import App from './App'

render(<App />, document.getElementById('root'))
CRA

cat > src/index.css << CRA
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

table, th, td {
  border: 12px solid transparent;
}

hr {
  right: 0;
  transform-origin: right center;
}
CRA

cat > src/App.css << CRA
.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

.App-header {
  background-color: #fff;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: top;
  font-size: calc(10px + 2vmin);
  color: white;
}

input {
  color: #333 !important;
}

div {
  color: #333;
}

.list {
  font-size: calc(3px + 2vmin);
  border: solid 1px red;
  text-align: left;
}
CRA

cat > npm_scripts << CRA
{
  "scripts": {
    "start": "webpack serve --mode=development --open --hot",
    "build": "webpack --mode=production"
  },
CRA

tail -n +2 package.json | \
egrep -v 'scripts|test|},' >> npm_scripts

mv npm_scripts package.json

npm i @babel/core @babel/preset-env @babel/preset-react webpack \
webpack-cli webpack-dev-server babel-loader css-loader \
style-loader html-webpack-plugin copy-webpack-plugin --save-dev

mkdir assets

cat > assets/blacksquare.svg << CRA
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   version="1.0"
   x="0.00000000"
   y="0.00000000"
   width="500.00000"
   height="500.00000"
   id="svg2">
  <defs
     id="defs4" />
  <g
     id="layer1">
    <rect
       width="300.00000"
       height="300.00000"
       x="100.00000"
       y="100.00000"
       style="opacity:1.0000000;fill:none;fill-opacity:1.0000000;fill-rule:evenodd;stroke:#000000;stroke-width:8.0000000;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4.0000000;stroke-dasharray:none;stroke-dashoffset:0.00000000;stroke-opacity:1.0000000"
       id="rect5719" />
  </g>
</svg>
CRA
